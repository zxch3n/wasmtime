initSidebarItems({"enum":[["Def","One toplevel form in an ISLE file."],["Expr","An expression: the right-hand side of a rule."],["Extern","An external binding: an extractor or constructor function attached to a term."],["Pattern","A pattern: the left-hand side of a rule."],["TypeValue","The actual type-value: a primitive or an enum with variants."]],"struct":[["Converter","An implicit converter: the given term, which must have type (inner_ty) -> outer_ty, is used either in extractor or constructor position as appropriate when a type mismatch with the given pair of types would otherwise occur."],["Decl","A declaration of a term with its argument and return types."],["Defs","The parsed form of an ISLE file."],["Extractor","An extractor macro: (A x y) becomes (B x _ y …). Expanded during ast-to-sema pass."],["Field","One field of an enum variant."],["Ident","An identifier – a variable, term symbol, or type."],["IfLet",""],["LetDef","One variable locally bound in a `(let ...)` expression."],["Rule",""],["Type","A declaration of a type."],["Variant","One variant of an enum type."]]});