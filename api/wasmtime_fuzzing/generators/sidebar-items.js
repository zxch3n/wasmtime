initSidebarItems({"enum":[["CodegenSettings","Choose between matching the host architecture or a cross-compilation target."],["DiffValue","A value passed to and from evaluation. Note that reference types are not (yet) supported."],["DiffValueType","Enumerate the supported value types."],["InstanceAllocationStrategy","Configuration for `wasmtime::InstanceAllocationStrategy`."],["MemoryConfig","Configuration for linear memories in Wasmtime."]],"mod":[["api","Generating sequences of Wasmtime API calls."],["component_types","This module generates test cases for the Wasmtime component model function APIs, e.g. `wasmtime::component::func::Func` and `TypedFunc`."],["table_ops","Generating series of `table.get` and `table.set` operations."]],"struct":[["Config","Configuration for `wasmtime::Config` and generated modules for a session of fuzzing."],["InstanceLimits","Configuration for `wasmtime::PoolingAllocationStrategy`."],["ModuleConfig","Default module-level configuration for fuzzing Wasmtime."],["NormalMemoryConfig","Represents a normal memory configuration for Wasmtime with the given static and dynamic memory sizes."],["SingleInstModule","Configure a single instruction module."],["SpecTest","A spec test from the upstream wast testsuite, arbitrarily chosen from the list of known spec tests."],["Stacks","Generate a Wasm module that keeps track of its current call stack, to compare to the host."],["UnalignedMemory","A custom “linear memory allocator” for wasm which only works with the “dynamic” mode of configuration where wasm always does explicit bounds checks."],["UnalignedMemoryCreator","A mechanism to generate [`UnalignedMemory`] at runtime."],["WasmtimeConfig","Configuration related to `wasmtime::Config` and the various settings which can be tweaked from within."]]});